"""empty message

Revision ID: 07910a207de8
Revises: be06b1cf3474
Create Date: 2021-06-28 15:31:59.065313

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '07910a207de8'
down_revision = 'be06b1cf3474'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sd42_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('counting_time', sa.Integer(), nullable=True, comment='紅綠燈從紅燈變為綠燈的等待時間，單位為秒'),
    sa.Column('create_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='Create time'),
    sa.Column('update_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='Update time'),
    sa.Column('cust_id', sa.Integer(), nullable=True, comment='Customer id'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('sd52_serial_number')
    op.drop_table('sd53_event_logs')
    op.drop_table('sd41_schedule_groups')
    op.drop_table('sd42_schedule_items')
    op.drop_table('sd50_issues')
    op.drop_table('sd62_today_schedules')
    op.drop_table('sd51_issue_logs')
    op.drop_column('sd10_customers', 'issue_namespace')
    op.alter_column('sd21_devices', 'dev_type',
               existing_type=sa.INTEGER(),
               comment='Device type: 0: unknown, 1: traffic light, 2: others',
               existing_comment='Device type: 0: unknown, 1: traffic light, 2: large scale devices',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('sd21_devices', 'status',
               existing_type=sa.INTEGER(),
               comment='Device status flag(bit).  0: warning, bit 1: error，可持續新增',
               existing_comment='Device status flag. bit 0: warning, bit 1: error',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.drop_column('sd21_devices', 'dimming')
    op.drop_constraint('sd22_device_groups_schedule_id_fkey', 'sd22_device_groups', type_='foreignkey')
    op.create_foreign_key(None, 'sd22_device_groups', 'sd42_schedule', ['schedule_id'], ['id'])
    op.drop_column('sd23_device_infos', 'lumming')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sd23_device_infos', sa.Column('lumming', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='Lumming'))
    op.drop_constraint(None, 'sd22_device_groups', type_='foreignkey')
    op.create_foreign_key('sd22_device_groups_schedule_id_fkey', 'sd22_device_groups', 'sd41_schedule_groups', ['schedule_id'], ['id'])
    op.add_column('sd21_devices', sa.Column('dimming', sa.INTEGER(), autoincrement=False, nullable=True, comment='Device dimming. 0~100'))
    op.alter_column('sd21_devices', 'status',
               existing_type=sa.INTEGER(),
               comment='Device status flag. bit 0: warning, bit 1: error',
               existing_comment='Device status flag(bit).  0: warning, bit 1: error，可持續新增',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('sd21_devices', 'dev_type',
               existing_type=sa.INTEGER(),
               comment='Device type: 0: unknown, 1: traffic light, 2: large scale devices',
               existing_comment='Device type: 0: unknown, 1: traffic light, 2: others',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.add_column('sd10_customers', sa.Column('issue_namespace', sa.VARCHAR(length=50), server_default=sa.text("'CUSTOM-{datetime:%%Y%%m%%d}-{serial_no:05d}'::character varying"), autoincrement=False, nullable=False, comment='Issue number namespace'))
    op.create_table('sd51_issue_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sequence', sa.INTEGER(), autoincrement=False, nullable=False, comment='Sequence number of issue log'),
    sa.Column('issue_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Issue id'),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='User id, who creates the issue log'),
    sa.Column('subject', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='Issue subject'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='Issue description'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Update time'),
    sa.Column('status_from', sa.INTEGER(), autoincrement=False, nullable=False, comment='Current state'),
    sa.Column('status_to', sa.INTEGER(), autoincrement=False, nullable=True, comment='Next state'),
    sa.ForeignKeyConstraint(['issue_id'], ['sd50_issues.id'], name='sd51_issue_logs_issue_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['sd11_users.id'], name='sd51_issue_logs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd51_issue_logs_pkey')
    )
    op.create_table('sd62_today_schedules',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('time', sa.VARCHAR(length=5), autoincrement=False, nullable=True, comment='Time, SR+0, SS+0, 19:00'),
    sa.Column('dimming', sa.INTEGER(), autoincrement=False, nullable=True, comment='Dimming'),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Device_id'),
    sa.Column('incre', sa.VARCHAR(length=1), autoincrement=False, nullable=True, comment='Increase Light, y/n'),
    sa.Column('vendor_device_id', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='Vender device id'),
    sa.PrimaryKeyConstraint('id', name='sd62_today_schedules_pkey')
    )
    op.create_table('sd50_issues',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('issue_no', sa.VARCHAR(length=30), autoincrement=False, nullable=False, comment='Issue number'),
    sa.Column('error_code', sa.INTEGER(), autoincrement=False, nullable=True, comment='Error code id'),
    sa.Column('priority_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Priority id'),
    sa.Column('subject', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='Issue subject'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='Issue description'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Update time'),
    sa.Column('due_day', sa.DATE(), autoincrement=False, nullable=True, comment='Expected time for dispatching'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Customer id'),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Device id'),
    sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Status id'),
    sa.Column('vendor_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Vendor id'),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Event log id'),
    sa.Column('assignee_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Assignee id, who is responsible for the dispatching'),
    sa.Column('report_from', sa.INTEGER(), autoincrement=False, nullable=False, comment='Report source'),
    sa.Column('reporter', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='Reporter name'),
    sa.Column('reporter_email', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='Reporter email'),
    sa.Column('reporter_mobile', sa.VARCHAR(length=15), autoincrement=False, nullable=True, comment='Reporter mobile phone'),
    sa.Column('reporter_phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True, comment='Telephone telephone'),
    sa.Column('reporter_line_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True, comment='LINE id'),
    sa.ForeignKeyConstraint(['assignee_id'], ['sd11_users.id'], name='sd50_issues_assignee_id_fkey'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd50_issues_cust_id_fkey'),
    sa.ForeignKeyConstraint(['device_id'], ['sd21_devices.id'], name='sd50_issues_device_id_fkey'),
    sa.ForeignKeyConstraint(['error_code'], ['sd12_codes.id'], name='sd50_issues_error_code_fkey'),
    sa.ForeignKeyConstraint(['priority_id'], ['sd12_codes.id'], name='sd50_issues_priority_id_fkey'),
    sa.ForeignKeyConstraint(['report_from'], ['sd12_codes.id'], name='sd50_issues_report_from_fkey'),
    sa.ForeignKeyConstraint(['status_id'], ['sd12_codes.id'], name='sd50_issues_status_id_fkey'),
    sa.ForeignKeyConstraint(['vendor_id'], ['sd10_customers.id'], name='sd50_issues_vendor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd50_issues_pkey'),
    sa.UniqueConstraint('cust_id', 'issue_no', name='sd50_issues_cust_id_issue_no_key')
    )
    op.create_table('sd42_schedule_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('day', sa.VARCHAR(length=1), autoincrement=False, nullable=True, comment='Week Day, 0~6'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Update time'),
    sa.Column('time', sa.VARCHAR(length=5), autoincrement=False, nullable=True, comment='Time, SR+0, SS+0, 19:00'),
    sa.Column('dimming', sa.INTEGER(), autoincrement=False, nullable=True, comment='Dimming'),
    sa.Column('schedule_group_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Schedule Group id'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Customer id'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd42_schedule_items_cust_id_fkey'),
    sa.ForeignKeyConstraint(['schedule_group_id'], ['sd41_schedule_groups.id'], name='sd42_schedule_items_schedule_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd42_schedule_items_pkey')
    )
    op.create_table('sd41_schedule_groups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sd41_schedule_groups_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Name'),
    sa.Column('display_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Display name'),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True, comment='Comment'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Update time'),
    sa.Column('scheme', sa.VARCHAR(length=4), autoincrement=False, nullable=True, comment='Schedule Time Scheme, 24h and srss'),
    sa.Column('incre', sa.VARCHAR(length=1), autoincrement=False, nullable=True, comment='Increase Light, y/n'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Customer id'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd41_schedule_groups_cust_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd41_schedule_groups_pkey'),
    sa.UniqueConstraint('cust_id', 'name', name='sd41_schedule_groups_cust_id_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('sd53_event_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Device_id'),
    sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='info, normal, warning or error'),
    sa.Column('component_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='component of device in the event'),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Event type'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='event description'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Customer id'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Update time'),
    sa.Column('data_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='device data time'),
    sa.Column('replace_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Event id that become normal'),
    sa.Column('ack', sa.INTEGER(), autoincrement=False, nullable=False, comment='0 = unread, 1 = read'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd53_event_logs_cust_id_fkey'),
    sa.ForeignKeyConstraint(['device_id'], ['sd21_devices.id'], name='sd53_event_logs_device_id_fkey'),
    sa.ForeignKeyConstraint(['replace_id'], ['sd53_event_logs.id'], name='sd53_event_logs_replace_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd53_event_logs_pkey')
    )
    op.create_table('sd52_serial_number',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Customer id'),
    sa.Column('prefix', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Prefix words'),
    sa.Column('serial_no', sa.INTEGER(), autoincrement=False, nullable=False, comment='Serial number'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd52_serial_number_cust_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd52_serial_number_pkey'),
    sa.UniqueConstraint('cust_id', 'prefix', 'serial_no', name='sd52_serial_number_cust_id_prefix_serial_no_key')
    )
    op.drop_table('sd42_schedule')
    # ### end Alembic commands ###
